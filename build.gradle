import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.github.rodionmoiseev.gradle.plugins', name: 'idea-utils', version: '0.2'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.3"
    id "de.undercouch.download" version "3.1.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'idea-utils'

idea {
    project {
        ipr {
            withXml { xmlProvider ->
                def project = xmlProvider.asNode()
                def runConfigs = new XmlParser().parse(new File("config/intellij_runconfigs.xml"))
                project.append(runConfigs)
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name = "Spigot"
        url = "https://hub.spigotmc.org/nexus/content/groups/public/"
    }

    maven {
        name = "Sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        name = "dmulloy2-repo"
        url = "http://repo.dmulloy2.net/content/groups/public/"
    }
    maven {
        name = "sk89q"
        url = "http://maven.sk89q.com/repo/"
    }
}

group = project.property("group")
version = project.property("version")
sourceCompatibility = project.property("sourceversion")

dependencies {
    compile group: 'org.spigotmc', name: 'spigot-api', version: project.property("apiversion")
    compile group: 'com.comphenix.protocol', name: 'ProtocolLib-API', version: '4.1.0'
    compile group: 'com.sk89q', name: 'worldedit', version: '5.5.8'
    compile group: 'com.sk89q', name: 'worldguard', version: '6.1'
    compile fileTree(dir: 'lib', include: '*.jar')
}

processResources {
    filter ReplaceTokens, tokens: [
            apiversion: project.property("apiversion"),
            version   : project.property("version")
    ]
}

clean {
    delete "final/"
    delete "testserver/"
}

jar {
    actions = []
    dependsOn = []
    dependsOn('shadowJar')
}

shadowJar {
    dependencies {
        exclude(dependency('org.spigotmc:spigot-api:.*'))
    }
}

sourceSets {
    main {
        resources {
            srcDir 'res/main'
        }
    }
}